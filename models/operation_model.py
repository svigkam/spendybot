import collections
from datetime import datetime
from enum import Enum


class Category(Enum):
    TRANSPORT = 'üöå –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç'
    HOUSE = 'üè† –î–æ–º'
    HEALTH = 'üíä –ó–¥–æ—Ä–æ–≤—å–µ'
    PERSONAL = 'üèù –õ–∏—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã'
    CLOTH = 'üß£ –û–¥–µ–∂–¥–∞'
    NUTRITION = 'üç± –ü–∏—Ç–∞–Ω–∏–µ'
    PRESENT = 'üéÅ –ü–æ–¥–∞—Ä–∫–∏'
    FAMILY = 'üß∏ –°–µ–º—å—è'
    TECHNIQUE = '‚åöÔ∏è –¢–µ—Ö–Ω–∏–∫–∞'
    SERVICES = 'üí∏ –£—Å–ª—É–≥–∏'
    SALARY = 'üíé –ó–∞—Ä–ø–ª–∞—Ç–∞'
    OVERWORK = 'üíé –ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞'
    OTHER = 'üíé –î—Ä—É–≥–æ–µ'

    @staticmethod
    def enum_to_list(data) -> list:
        names = []
        values = []
        for i in data:
            names.append(i.name)
            values.append(i.value)
        return [names, values]



class Operation:
    def __init__(self, id, user_id, amount, category, date: datetime):
        self.id = id
        self.user_id = user_id
        self.amount = amount
        self.category = category
        self.date = date

    @staticmethod
    def from_db_to_operation(data: list) -> list:
        result = []
        for operation in data:
            temp = Operation(
                id=operation[0],
                user_id=operation[1],
                amount=operation[2],
                category=operation[4],
                date=datetime.fromtimestamp(operation[5]),
            )
            result.append(temp)
        return result

    def __str__(self) -> str:
        format_time = self.date.strftime("%Y-%m-%d %H:%M")
        return f'#{self.id} –æ—Ç {format_time}\n{Category[self.category].value} –Ω–∞ —Å—É–º–º—É {self.amount}‚ÇΩ'
